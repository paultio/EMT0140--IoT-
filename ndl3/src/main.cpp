// Includes global variables and librarys that the DHT uses
#include <Arduino.h>
#include <ittiot.h>
#include <ESP8266WiFi.h>
#include <Adafruit_I2CDevice.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
 
#define OLED_RESET 0  // GPIO0
 
Adafruit_SSD1306 display(OLED_RESET); // Create an object for OLED screen
 
int i = 0; // Counter variable is defined
 
// ITT splashs screen bitmap. Generator can be found in: http://javl.github.io/image2cpp/
static const unsigned char PROGMEM logo16_glcd_bmp[] =
{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xf8, 0x38, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x78, 0xf0, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xf0, 0x78, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x70, 0xf0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x78, 0xf0, 0x7c, 0x1e, 0x0f, 0x00, 0x00, 0x00, 0x78, 0xf0, 0x7c, 0x3e, 0x3f, 0xc0, 
	0x00, 0x00, 0x78, 0xf8, 0x7c, 0x7e, 0x7f, 0xe0, 0x00, 0x00, 0x78, 0x78, 0x7c, 0x7e, 0xff, 0xf0, 
	0x00, 0x00, 0x78, 0x78, 0x7c, 0xfe, 0xf9, 0xf0, 0x00, 0x00, 0x78, 0x7c, 0x7c, 0xf8, 0xf0, 0xf0, 
	0x00, 0x00, 0x78, 0x3c, 0x7c, 0xf8, 0xf0, 0xf0, 0x00, 0x00, 0x78, 0x3c, 0x7c, 0xf8, 0xf9, 0xf0, 
	0x00, 0x00, 0x78, 0x3c, 0x7c, 0xf8, 0xff, 0xf0, 0x00, 0x00, 0x78, 0x3c, 0x7c, 0xf8, 0x7f, 0xe0, 
	0x00, 0x00, 0x78, 0x3c, 0x7c, 0xf8, 0x7f, 0xe0, 0x00, 0x00, 0x78, 0x3c, 0x7c, 0xf8, 0x3f, 0xc0, 
	0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xe0, 0x41, 0x02, 0x08, 0x00, 0xff, 0xff, 0xff, 0xc0, 0x5f, 0xaf, 0x1e, 0x80, 
	0xff, 0xff, 0xff, 0x80, 0x52, 0x0a, 0xbb, 0x00, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x20, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


unsigned long tim;
unsigned long lasttime;

void setup()
{
  // Initialize serial port and send message
  Serial.begin(115200); // setting up serial connection parameter
  Serial.println("Booting");
  // initialize with the I2C addr 0x3C (for the 64x48)
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
 
  // Since the buffer is initialized with an Adafruit splashscreen
  // internally, we should clear it
  display.clearDisplay();
 
  // Load ITT splash screen into buffer
  display.drawBitmap(0, 0,  logo16_glcd_bmp, 64, 48, 1);
  // Show image buffer on the display
  display.display();
 
  // Display splashscreen two second
  delay(2000);

  tim = millis();
  lasttime = tim;
}
 
void loop()
{
  // Print the time
  tim = millis();
  if (tim - lasttime > 500) {
    i++;
    lasttime = tim;
    // Display counter value on the OLED screen
    display.clearDisplay(); // clears the srceen
    display.setTextSize(1); // sets the text size for the screen
    display.setTextColor(WHITE); // text color is set to white
    display.setCursor(0,0); // position from where the text writing is starting
    display.println("TIM: "); // a text is send to the screen
    display.println(i * 0.5); // counter value is send to the screen
    display.display(); // show image
  }
}